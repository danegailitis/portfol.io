{"version":3,"sources":["DataBuilder.js","LineChart.js","index.js"],"names":["DataBuilder","ticker","Object","classCallCheck","this","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","endpoint","fetch","res","json","dataJson","setLabel","x","y","i","chart","length","push","date","close","newdata","LineChart","props","_this","possibleConstructorReturn","getPrototypeOf","call","db","state","_this2","window","addEventListener","setRedraw","buildData","then","setState","chartdata","react_default","a","createElement","es","ref","Component","navigator","serviceWorker","register","reg","console","log","scope","catch","error","ctx","document","getElementById","ReactDOM","render","LineChart_LineChart"],"mappings":"+MAAqBA,aACjB,SAAAA,EAAYC,GAAQC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAChBI,KAAKH,OAASA,EACdG,KAAKC,KAAO,CACRC,OAAQ,GACRC,SAAU,CACN,CACIC,MAAOJ,KAAKH,OACZQ,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBpB,KAAM,uLAOdqB,iDAAmDtB,KAAKH,wEAC1C0B,MAAMD,iBAAlBE,kBACiBA,EAAIC,qBAArBC,SACN1B,KAAK2B,SAASD,qBAEP1B,KAAKC,yIAGPyB,GAGL,IAFA,IAAIE,EAAI,GACJC,EAAI,GACCC,EAAI,EAAGA,EAAIJ,EAASK,MAAMC,OAAQF,IACvCF,EAAEK,KAAKP,EAASK,MAAMD,GAAGI,MACzBL,EAAEI,KAAKP,EAASK,MAAMD,GAAGK,OAE7B,IAAIC,EAAUpC,KAAKC,KACnBmC,EAAQlC,OAAS0B,EACjBQ,EAAQjC,SAAS,GAAGF,KAAO4B,EAC3B7B,KAAKC,KAAOmC,WC5CCC,cACnB,SAAAA,EAAYC,GAAM,IAAAC,EAAAzC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,GAAA,OAChBE,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAE,KAAAF,OAAA2C,EAAA,EAAA3C,CAAAuC,GAAAK,KAAA1C,KAAMsC,KAEDK,GAAK,IAAI/C,EADD,QAEb2C,EAAKK,MAAQL,EAAKI,GAAG1C,KAJLsC,mFAOE,IAAAM,EAAA7C,KAClB8C,OAAOC,iBAAiB,SAAU/C,KAAKsC,MAAMU,WAAW,GACxDhD,KAAK2C,GAAGM,YAAYC,KAAK,SAAAd,GACrBS,EAAKM,SAASf,sFAOlB,IAAIgB,EAAWpD,KAAK4C,MAClB,OACES,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMvD,KAAMmD,EACVK,IAAI,kBAvByBC,aCAnC,kBAAmBC,WACnBA,UAAUC,cAAcC,WACnBX,KAAK,SAAUY,GAEZC,QAAQC,IAAI,oCAAsCF,EAAIG,SACvDC,MAAM,SAAUC,GAGfJ,QAAQC,IAAI,4BAA8BG,KAGtD,IAAIC,EAAMC,SAASC,eAAe,WAClCC,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAAeL","file":"static/js/main.af5cacd5.chunk.js","sourcesContent":["export default class DataBuilder {\r\n    constructor(ticker){\r\n        this.ticker = ticker;\r\n        this.data = {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    label: this.ticker,\r\n                    fill: false,\r\n                    lineTension: 0.1,\r\n                    backgroundColor: 'rgba(75,192,192,0.4)',\r\n                    borderColor: 'rgba(75,192,192,1)',\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: 'rgba(75,192,192,1)',\r\n                    pointBackgroundColor: '#fff',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: []\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    async buildData() {\r\n        var endpoint = `https://api.iextrading.com/1.0/stock/${this.ticker}/batch?types=quote,stats,company,news,chart&range=1y`;\r\n        const res = await fetch(endpoint);\r\n        const dataJson = await res.json();\r\n        this.setLabel(dataJson);\r\n\r\n        return this.data;\r\n    }\r\n\r\n    setLabel(dataJson) {\r\n        var x = [];\r\n        var y = [];\r\n        for (let i = 0; i < dataJson.chart.length; i++) {\r\n            x.push(dataJson.chart[i].date);\r\n            y.push(dataJson.chart[i].close);\r\n        }\r\n        var newdata = this.data;\r\n        newdata.labels = x;\r\n        newdata.datasets[0].data = y;\r\n        this.data = newdata;\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport DataBuilder from './DataBuilder';\n\n\nexport default class LineChart extends Component {\n  constructor(props){\n    super(props);\n    var ticker = 'aapl'; //need backend hook\n    this.db = new DataBuilder(ticker);\n    this.state = this.db.data;\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.props.setRedraw, true);\n    this.db.buildData().then(newdata =>{\n        this.setState(newdata);\n    });\n  }\n\n  componentWillUnmount() {\n  }\n  render() {\n    var chartdata= this.state;\n      return(\n        <div>\n        <h2>Line Example</h2>\n        <Line data={chartdata}\n          ref=\"chart\"\n        />\n        </div >\n      );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LineChart from './LineChart';\n\n//import serviceWorker from './serviceWorker';\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register()\n        .then(function (reg) {\n            // registration worked\n            console.log('Registration succeeded. Scope is ' + reg.scope);\n        }).catch(function (error) {\n            // registration failed\n      \n            console.log('Registration failed with ' + error);\n        });\n}\nvar ctx = document.getElementById(\"myChart\");\nReactDOM.render(<LineChart />, ctx);\n\n"],"sourceRoot":""}